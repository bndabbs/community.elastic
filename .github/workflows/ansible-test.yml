name: CI
on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: "0 3 * * *"

jobs:
  sanity:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ansible_collections/community/elastic
    steps:

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/community/elastic

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install ansible-base (devel)
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 3
          max_attempts: 3
          command: pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check

      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color

  #units:
  #  runs-on: ubuntu-20.04
  #  defaults:
  #    run:
  #      working-directory: ansible_collections/community/elastic
  #  steps:
  #    - name: Check out code
  #      uses: actions/checkout@v2
  #      with:
  #        path: ansible_collections/community/elastic

  #    - name: Set up Python 3.6
  #      uses: actions/setup-python@v1
  #      with:
  #        python-version: 3.6

  #    - name: Install ansible-base (devel)
  #      uses: nick-invision/retry@v2
  #      with:
  #        timeout_minutes: 3
  #        max_attempts: 3
  #        command: pip install https://github.com/ansible/ansible/archive/devel.tar.gz --disable-pip-version-check

  #    - name: Run unit tests
  #      run: ansible-test units --docker -v --color --python 3.6 --coverage

  #    - name: Generate coverage report.
  #      run: ansible-test coverage xml -v --requirements --group-by command --group-by version

  #    - uses: codecov/codecov-action@v1
  #      with:
  #        fail_ci_if_error: false

  integration_matrix:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ansible_collections/community/elastic
    outputs:
      matrix: ${{ steps.json-list.outputs.modules-to-test }}

    steps:

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/community/elastic

      - name: Generate module list
        run: |
          find tests/integration/targets -type d -maxdepth 1 -not -name 'setup*' | cut -d '/' -f4 | sort | awk NF | jq -sRc 'split("\n") | map(select(length > 0))' > int_test_modules.json

      - name: Set output variable
        id: json-list
        run: |
          output=$(cat int_test_modules.json)
          echo "::set-output name=modules-to-test::$output"
          echo "$output"

  integration:
    needs: integration_matrix
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ansible_collections/community/elastic
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-18.04
          - ubuntu-20.04
        ansible_version:
          - stable-2.11
          - stable-2.10
          - devel
        python_version:
          - "3.9"
          - "3.6"
          - "2.7"
        exclude:
          - os: ubuntu-18.04
            python_version: "3.9"
          - os: ubuntu-20.04
            python_version: "2.7"
          - os: ubuntu-20.04
            python_version: "3.6"
        elastic_module: ${{ fromJson(needs.integration_matrix.outputs.matrix) }}
    steps:

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/community/elastic

      # - name: Set up Python ${{ matrix.python_version }}
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python_version }}

      - name: Install python packages
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 3
          max_attempts: 3
          command: |
            pip install \
            docker \
            elasticsearch \
            requests \
            "coverage<5.0.0,>=4.5.1" \
            junit-xml \
            six \
            https://github.com/ansible/ansible/archive/${{ matrix.ansible_version }}.tar.gz

      # - name: Install ansible-base (${{ matrix.ansible_version }})
      #   uses: nick-invision/retry@v2
      #   with:
      #     timeout_minutes: 3
      #     max_attempts: 3
      #     command: pip install  --disable-pip-version-check

      - name: Install Dependent Collections
        run: ansible-galaxy collection install -r tests/requirements.yml -p $GITHUB_WORKSPACE/ansible_collections

      - name: Run integration tests on Python ${{ matrix.python_version }} | ${{ matrix.ansible_version }}
        run: ansible-test integration -v --requirements --allow-root --allow-destructive --color --retry-on-error --python ${{ matrix.python_version }} --continue-on-error --diff --coverage ${{ matrix.elastic_module }}

      - name: Upload Coverage data
        run: tests/coverage.sh
